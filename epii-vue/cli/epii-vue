#! /usr/bin/env node
// -*- js -*-
process.stdin.setEncoding('utf8');
const fs = require("fs");
const copy = require("../tools/copydir.js");
const WebpackDevServer = require("webpack-dev-server");
var webpack = require("webpack");
function readline() {
  return new Promise((resolve, reject) => {
    process.stdin.resume();
    process.stdin.on('data', function (data) {
      process.stdin.pause(); // stops after one line reads
      resolve(data.replace(/\r\n/g, "").replace("\n", ""));
    });
  });
}
let runner = {
  async pull() {
    await this.dopull();
    console.log("success");
  },
  async dopull() {
    return new Promise((ok, error) => {
      console.log("download example project from repo");
      var download = require('download-git-repo');
      download('epaii/epii-vue-cli-project-example#master', __dirname + '/../project-example',function (err) {
        if(err)
         console.log('Error'+err);
         else ok();
      })
    })

  },
  build() {
    const config = require(__dirname + "/../webpack/webpack.production.js");
    var compiler = webpack(config, (err, res) => {
      if (err || res.hasErrors()) {
        console.log("构建过程出错！" + res);
      } else {
        console.log("构建成功！");
        let onbuid_file = process.cwd() + "/hooks/build.js";
        if (fs.existsSync(onbuid_file)) {
          let build_mod = require(onbuid_file);
          if (typeof build_mod === "function") {
            build_mod();
          }
        }
      }
    });
  },
  dev() {
    const config = require(__dirname + "/../webpack/webpack.location.js");
    var compiler = webpack(config);
    
    var server = new WebpackDevServer(compiler, config.devServer);
    var portfinder = require('portfinder');
    portfinder.basePort = 8800;
    portfinder.getPort(function (err, port) {
      server.listen(port);
    });
  },
  init: async function () {
    await this.dopull();
    let pfile = process.cwd() + "/package.json";
    if (fs.existsSync(pfile)) {
      console.log("检测到已经存在项目了");
      return;
    }
    let init = require(__dirname+"/../project-example/init.js");
    await init(copy,fs,readline);
  }
}

let runner_other = __dirname+"/../project-example/cli.js";
if(fs.existsSync(runner_other))
{
  require(runner_other)(runner);
}

 
if (process.argv.length > 2) {

  if (runner.hasOwnProperty(process.argv[2])) {
    runner[process.argv[2]].apply(runner, process.argv.slice(3));
  } else {
    console.log(process.argv[2] + " error ")

  }
} else {
  runner.dev();
}

